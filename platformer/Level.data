`
#include <platformer/JsonUtils.hpp>
`

struct [[Json]] LevelSpawnPoint {
	Vec2 position;
}

struct [[Json]] LevelDoubleJumpOrb {
	Vec2 position;
}

struct [[Json]] LevelMovingBlock {
	Vec2 position = `Vec2(0.0f)`;
	Vec2 size = `Vec2(0.0f)`;
	Vec2 endPosition = `Vec2(0.0f)`;
	float speedBlockPerSecond = `1.0f`;
	bool activateOnCollision = `false`;
	bool stopAtEnd = `false`;
}

struct [[Json]] LevelRoom {
	`// positio and size in grid`
	$Vec2T<i32>$ position = `Vec2T<i32>()`;
	$Array2d<BlockType>$ blockGrid = `Array2d<BlockType>(0, 0)`;
	vector<LevelSpawnPoint> spawnPoints = `std::vector<LevelSpawnPoint>()`;
	vector<LevelDoubleJumpOrb> doubleJumpOrbs = `std::vector<LevelDoubleJumpOrb>()`;
	vector<LevelMovingBlock> movingBlocks = `std::vector<LevelMovingBlock>()`;
}

struct [[Json]] Level {
	vector<LevelRoom> rooms;	
}